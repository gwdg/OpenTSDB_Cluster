#!/bin/sh
### BEGIN INIT INFO
# Provides:          hadoop services
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Hadoop services
# Short-Description: Enable Hadoop services including hdfs
### END INIT INFO
# PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
PATH=/sbin:/bin:/usr/sbin:/usr/bin
HADOOP_BIN=<%= scope.lookupvar('::opentsdb_cluster::hadoop_working_dir') %>/bin
OPENTSDB_HOME=<%= scope.lookupvar('::opentsdb_cluster::opentsdb_working_dir') %>
tsdtmp=${TMPDIR-'/tmp'}/tsd
REGIONSERVERS=<%= scope.lookupvar('::opentsdb_cluster::puppet_hostname') %>,<%= scope.lookupvar('::opentsdb_cluster::slave_hostname') %>
NAME=hadoop
DESC=hadoop
USER=<%= scope.lookupvar('::opentsdb_cluster::myuser_name') %>
ROTATE_SUFFIX=
test -x $HADOOP_BIN || exit 0
RETVAL=0
set -e
cd /

start_opentsdb () {
    set +e
    ##
	$OPENTSDB_HOME/build/tsdb tsd --port=<%= scope.lookupvar('::opentsdb_cluster::opentsdb_port') %> --staticroot=$OPENTSDB_HOME/build/staticroot --cachedir=$tsdtmp --zkquorum=$REGIONSERVERS --auto-metric &
    case "$?" in
      0)
        echo SUCCESS
        RETVAL=0
        ;;
      1)
        echo TIMEOUT
        RETVAL=1
        ;;
      *)
        echo FAILED
        RETVAL=1
        ;;
    esac
    set -e
}

stop_opentsdb () {
    set +e
    if [ $RETVAL = 0 ] ; then
        kill $(ps ax | grep tsdb | awk '{print substr($0,1,5)}')
        RETVAL=$?
        if [ $RETVAL != 0 ] ; then
            echo FAILED
        fi
    else
        echo No nodes running
        RETVAL=0
    fi
    set -e
}

restart_opentsdb() {
    stop_hadoop
    start_hadoop
}

case "$1" in
    start)
        echo -n "Starting $DESC: "
        start_opentsdb
        echo "$NAME."
        ;;
    stop)
        echo -n "Stopping $DESC: "
        stop_opentsdb
        echo "$NAME."
        ;;
    force-reload|restart)
        echo -n "Restarting $DESC: "
        restart_opentsdb
        echo "$NAME."
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload}" >&2
        RETVAL=1
        ;;
esac
exit $RETVAL